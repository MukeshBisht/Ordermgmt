{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/components/order-modal/order-modal.component.ts","./src/components/order-modal/order-modal.template.html","./src/components/order-table/order-table.component.ts","./src/components/order-table/order-table.template.html","./src/main.ts","./src/pages/order-list.component.ts","./src/pages/order-list.template.html","./src/services/order.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderListComponent } from 'src/pages/order-list.component';\n\nconst routes: Routes = [{path: '', component: OrderListComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","<main class=\"min-vh-100 p-4\">\r\n    <div class=\"container-xl\">\r\n      <h1 class=\"h3 fw-bold mb-4\">Order Management System</h1>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </main>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OrderService } from 'src/services/order.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OrderListComponent } from 'src/pages/order-list.component';\nimport { OrderModalComponent } from 'src/components/order-modal/order-modal.component';\nimport { OrderTableComponent } from 'src/components/order-table/order-table.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrderListComponent,\n    OrderModalComponent,\n    OrderTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  providers: [OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, Output, SimpleChanges } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Order } from \"src/types/Order\";\r\nimport { OrderItem } from \"src/types/OrderItem\";\r\n\r\n@Component({\r\n selector: 'order-modal',\r\n templateUrl: './order-modal.template.html'\r\n}) \r\nexport class OrderModalComponent {\r\n\r\n    @Input() IsOpen: boolean = false;\r\n    @Input() Order: Order | null = null;\r\n    @Output() OnClose: EventEmitter<any> = new EventEmitter();\r\n    @Output() OnSave: EventEmitter<any> = new EventEmitter();\r\n\r\n    orderForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.orderForm = this.fb.group({\r\n      id: [''],\r\n      orderNumber: [''],\r\n      customerName: [''],\r\n      customerEmail: [''],\r\n      orderDate: [''],\r\n      status: ['Pending'],\r\n      total: [0],\r\n      items: this.fb.array([]),\r\n      shippingAddress: [''],\r\n      notes: ['']\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['order'] && this.Order) {\r\n      this.populateForm(this.Order);\r\n    } else {\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  get items(): FormArray {\r\n    return this.orderForm.get('items') as FormArray;\r\n  }\r\n\r\n  addItem(): void {\r\n    this.items.push(this.fb.group({\r\n      id: [''],\r\n      productName: [''],\r\n      quantity: [1],\r\n      unitPrice: [0],\r\n      total: [0]\r\n    }));\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n    this.items.removeAt(index);\r\n    this.updateTotal();\r\n  }\r\n\r\n  updateTotal(): void {\r\n    const total = this.items.value.reduce((sum: number, item: OrderItem) => sum + item.quantity * item.unitPrice, 0);\r\n    this.orderForm.patchValue({ total });\r\n  }\r\n\r\n  populateForm(order: Order): void {\r\n    this.orderForm.patchValue(order);\r\n    console.log('here');\r\n    console.log(order, this.orderForm);\r\n    this.items.clear();\r\n    order.items.forEach(item => this.items.push(this.fb.group(item)));\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.orderForm.reset({\r\n      id: '',\r\n      orderNumber: '',\r\n      customerName: '',\r\n      customerEmail: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      status: 'Pending',\r\n      total: 0,\r\n      items: [],\r\n      shippingAddress: '',\r\n      notes: ''\r\n    });\r\n    this.items.clear();\r\n  }\r\n\r\n  submit(): void {\r\n    if (this.orderForm.valid) {\r\n      this.OnSave.emit(this.orderForm.value);\r\n    }\r\n  }\r\n\r\n}","<!-- Bootstrap Modal -->\r\n<div *ngIf=\"IsOpen\" class=\"modal fade show d-block\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\">Order Details</h2>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"OnClose.emit(Order)\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"orderForm\" (ngSubmit)=\"submit()\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Order Number</label>\r\n            <input formControlName=\"orderNumber\" class=\"form-control\" />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Customer Name</label>\r\n            <input formControlName=\"customerName\" class=\"form-control\" required />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Customer Email</label>\r\n            <input formControlName=\"customerEmail\" type=\"email\" class=\"form-control\" required />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Order Date</label>\r\n            <input formControlName=\"orderDate\" type=\"date\" class=\"form-control\" required />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Status</label>\r\n            <select formControlName=\"status\" class=\"form-select\">\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Shipped\">Shipped</option>\r\n              <option value=\"Delivered\">Delivered</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Shipping Address</label>\r\n            <textarea formControlName=\"shippingAddress\" class=\"form-control\" required></textarea>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Notes</label>\r\n            <textarea formControlName=\"notes\" class=\"form-control\"></textarea>\r\n          </div>\r\n\r\n          <h3>Items</h3>\r\n          <div formArrayName=\"items\">\r\n            <div *ngFor=\"let item of items.controls; let i = index\" [formGroupName]=\"i\" class=\"mb-3 p-3 border rounded\">\r\n              <input formControlName=\"productName\" placeholder=\"Product Name\" class=\"form-control mb-2\" required />\r\n              <input formControlName=\"quantity\" type=\"number\" min=\"1\" class=\"form-control mb-2\" required />\r\n              <input formControlName=\"unitPrice\" type=\"number\" min=\"0.01\" step=\"0.01\" class=\"form-control mb-2\" required />\r\n              <span>Total: {{ item.get('total')?.value | currency }}</span>\r\n              <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\" (click)=\"removeItem(i)\">Remove</button>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"addItem()\">Add Item</button>\r\n          </div>\r\n\r\n          <h3 class=\"mt-3\">Total: {{ orderForm.get('total')?.value | currency }}</h3>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"orderForm.invalid\">Save Order</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"OnClose.emit(Order)\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Order } from \"src/types/Order\";\r\n\r\n\r\n@Component({\r\n    selector: 'order-table',\r\n    templateUrl: './order-table.template.html'\r\n})\r\nexport class OrderTableComponent {\r\n\r\n    constructor() { }\r\n\r\n    @Input() Orders: Order[] = [];\r\n    @Input() IsLoading: boolean = false;\r\n    @Output() OnEdit: EventEmitter<any> = new EventEmitter();\r\n    @Output() OnDelete: EventEmitter<any> = new EventEmitter();\r\n\r\n}","<div class=\"border rounded p-3\">\r\n  <table class=\"table table-striped table-hover\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th>Order ID</th>\r\n        <th>Customer</th>\r\n        <th>Date</th>\r\n        <th>Status</th>\r\n        <th>Items</th>\r\n        <th class=\"text-end\">Total</th>\r\n        <th class=\"text-end\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let order of Orders\" key=\"order.id\">\r\n        <td class=\"fw-medium\">{{ order.orderNumber }}</td>\r\n        <td>{{ order.customerName }}</td>\r\n        <td>{{ order.orderDate }}</td>\r\n        <td>{{ order.status }}</td>\r\n        <td>\r\n          <div class=\"d-flex align-items-center\">\r\n            <i class=\"bi bi-cart\"></i>\r\n            {{ order.items.length }}\r\n          </div>\r\n        </td>\r\n        <td class=\"text-end\">{{ order.total }}</td>\r\n        <td class=\"text-end\">\r\n          <div class=\"d-flex justify-content-end gap-2\">\r\n            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"OnEdit.emit(order)\">\r\n              <i class=\"bi bi-pencil\"></i>\r\n              Edit\r\n            </button>\r\n            <button class=\"btn btn-outline-danger btn-sm\" (click)=\"OnDelete.emit(order)\">\r\n              <i class=\"bi bi-trash\"></i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { OrderService } from \"src/services/order.service\";\r\nimport { Order } from \"src/types/Order\";\r\n\r\n\r\n@Component({\r\n    selector: 'order-list',\r\n    templateUrl: './order-list.template.html'\r\n})\r\nexport class OrderListComponent implements OnInit {\r\n\r\n    constructor(private orderService: OrderService) { }\r\n\r\n    Orders: Order[] = [];\r\n    CurrentOrder: Order | null = null;\r\n    IsLoading: boolean = false;\r\n    IsModalOpen: boolean = false;\r\n\r\n    ngOnInit(): void {\r\n        this.IsLoading = true;\r\n        this.orderService.getOrders().then(orders => {\r\n            this.Orders = orders;\r\n        });\r\n    }\r\n\r\n    handleAddOrder() {\r\n        this.CurrentOrder = null;\r\n        this.IsModalOpen = true;\r\n    }\r\n\r\n    handleEditOrder(order: Order) {\r\n        this.CurrentOrder = order;\r\n        this.IsModalOpen = true;\r\n    }\r\n\r\n    handleDeleteOrder(id: string) {\r\n        try {\r\n            this.orderService.deleteOrder(id);\r\n            this.Orders = this.Orders.filter((order) => order.id !== id);\r\n            //   toast({\r\n            //     title: \"Success\",\r\n            //     description: \"Order deleted successfully\",\r\n            //   })\r\n        } catch (error) {\r\n            //   toast({\r\n            //     title: \"Error\",\r\n            //     description: \"Failed to delete order\",\r\n            //     variant: \"destructive\",\r\n            //   })\r\n        }\r\n    }\r\n\r\n    handleSaveOrder(order: Order) {\r\n        try {\r\n            if (order.id) {\r\n                // Update existing order\r\n                this.orderService.updateOrder(order).then(updatedOrder => {\r\n                    this.Orders = this.Orders.map((o) => (o.id === updatedOrder.id ? updatedOrder : o))\r\n                });\r\n\r\n                // toast({\r\n                //   title: \"Success\",\r\n                //   description: \"Order updated successfully\",\r\n                // })\r\n            } else {\r\n                // Create new order\r\n                this.orderService.createOrder(order).then(order => {\r\n                    this.Orders.push(order);\r\n                })\r\n\r\n                // toast({\r\n                //   title: \"Success\",\r\n                //   description: \"Order created successfully\",\r\n                // })\r\n            }\r\n            this.IsModalOpen = false;\r\n        } catch (error) {\r\n            //   toast({\r\n            //     title: \"Error\",\r\n            //     description: \"Failed to save order\",\r\n            //     variant: \"destructive\",\r\n            //   })\r\n        }\r\n    }\r\n}","<div class=\"d-flex flex-column gap-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h2 class=\"h4 fw-semibold\">Orders</h2>\r\n      <button class=\"btn btn-primary\" (click)=\"handleAddOrder()\">Add Order</button>\r\n    </div>\r\n  \r\n    <order-table \r\n      [Orders]=\"Orders\" \r\n      [IsLoading]=\"IsLoading\" \r\n      (OnEdit)=\"handleEditOrder($event)\" \r\n      (OnDelete)=\"handleDeleteOrder($event)\" \r\n    ></order-table>\r\n  \r\n    <order-modal\r\n      [IsOpen]=\"IsModalOpen\"\r\n      (OnClose)=\"IsModalOpen=false\"\r\n      [Order]=\"CurrentOrder\"\r\n      (OnSave)=\"handleSaveOrder($event)\"\r\n    ></order-modal>\r\n  </div>\r\n  ","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from \"src/types/Order\";\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n    readonly mockOrders: Order[];\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n\r\n        // Mock data for development\r\n        this.mockOrders = [\r\n            {\r\n                id: \"1\",\r\n                orderNumber: \"ORD-0001\",\r\n                customerName: \"John Doe\",\r\n                customerEmail: \"john.doe@example.com\",\r\n                orderDate: \"2023-05-15T10:30:00Z\",\r\n                status: \"Delivered\",\r\n                total: 125.99,\r\n                items: [\r\n                    {\r\n                        id: \"item1\",\r\n                        productName: \"Product A\",\r\n                        quantity: 2,\r\n                        unitPrice: 49.99,\r\n                        total: 99.98,\r\n                    },\r\n                    {\r\n                        id: \"item2\",\r\n                        productName: \"Product B\",\r\n                        quantity: 1,\r\n                        unitPrice: 26.01,\r\n                        total: 26.01,\r\n                    },\r\n                ],\r\n                shippingAddress: \"123 Main St, Anytown, USA\",\r\n                notes: \"Please leave at the front door\",\r\n            },\r\n            {\r\n                id: \"2\",\r\n                orderNumber: \"ORD-0002\",\r\n                customerName: \"Jane Smith\",\r\n                customerEmail: \"jane.smith@example.com\",\r\n                orderDate: \"2023-05-16T14:45:00Z\",\r\n                status: \"Processing\",\r\n                total: 79.95,\r\n                items: [\r\n                    {\r\n                        id: \"item3\",\r\n                        productName: \"Product C\",\r\n                        quantity: 1,\r\n                        unitPrice: 79.95,\r\n                        total: 79.95,\r\n                    },\r\n                ],\r\n                shippingAddress: \"456 Oak Ave, Somewhere, USA\",\r\n                notes: \"\",\r\n            },\r\n            {\r\n                id: \"3\",\r\n                orderNumber: \"ORD-0003\",\r\n                customerName: \"Bob Johnson\",\r\n                customerEmail: \"bob.johnson@example.com\",\r\n                orderDate: \"2023-05-17T09:15:00Z\",\r\n                status: \"Pending\",\r\n                total: 249.97,\r\n                items: [\r\n                    {\r\n                        id: \"item4\",\r\n                        productName: \"Product D\",\r\n                        quantity: 3,\r\n                        unitPrice: 59.99,\r\n                        total: 179.97,\r\n                    },\r\n                    {\r\n                        id: \"item5\",\r\n                        productName: \"Product E\",\r\n                        quantity: 1,\r\n                        unitPrice: 70.0,\r\n                        total: 70.0,\r\n                    },\r\n                ],\r\n                shippingAddress: \"789 Pine St, Elsewhere, USA\",\r\n                notes: \"Call before delivery\",\r\n            },\r\n        ]\r\n    }\r\n\r\n\r\n    getOrders(): Promise<Order[]> {\r\n        return Promise.resolve([...this.mockOrders]);\r\n    }\r\n\r\n    getOrderById(id: string): Promise<Order> {\r\n\r\n        const order = this.mockOrders.find((o) => o.id === id)\r\n        if (!order) {\r\n            throw new Error(\"Order not found\")\r\n        }\r\n        return Promise.resolve({ ...order });\r\n    }\r\n\r\n    createOrder(order: Order): Promise<Order> {\r\n\r\n        const newOrder = {\r\n            ...order,\r\n            id: Math.random().toString(36).substring(2, 9),\r\n        }\r\n        this.mockOrders.push(newOrder)\r\n        return Promise.resolve({ ...newOrder });\r\n    }\r\n\r\n    updateOrder(order: Order): Promise<Order> {\r\n\r\n        const index = this.mockOrders.findIndex((o) => o.id === order.id)\r\n        if (index === -1) {\r\n            throw new Error(\"Order not found\")\r\n        }\r\n        this.mockOrders[index] = { ...order }\r\n        return Promise.resolve({ ...order });\r\n    }\r\n\r\n    deleteOrder(id: string): Promise<void> {\r\n\r\n        const index = this.mockOrders.findIndex((o) => o.id === id)\r\n        if (index === -1) {\r\n            throw new Error(\"Order not found\")\r\n        }\r\n        this.mockOrders.splice(index, 1)\r\n        return Promise.resolve();\r\n    }\r\n\r\n    uploadReceipt(orderId: string, file: File): Promise<void> {\r\n        // In a real application, this would upload the file to Azure Blob Storage\r\n        // For now, we'll just simulate the upload\r\n\r\n        console.log(`Receipt uploaded for order ${orderId}: ${file.name}`)\r\n\r\n        // In a real app, this would trigger an Azure Function via a queue message\r\n        console.log(`Sending message to queue for processing order ${orderId}`)\r\n        return Promise.resolve();\r\n    }\r\n\r\n}"],"names":["RouterModule","OrderListComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","BrowserModule","OrderService","HttpClientModule","OrderModalComponent","OrderTableComponent","CommonModule","ReactiveFormsModule","AppModule","bootstrap","declarations","EventEmitter","ɵɵlistener","OrderModalComponent_div_0_div_46_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r5","i_r3","index","ctx_r4","ɵɵnextContext","ɵɵresetView","removeItem","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","tmp_1_0","item_r2","get","value","OrderModalComponent_div_0_Template_button_click_6_listener","_r7","ctx_r6","OnClose","emit","Order","OrderModalComponent_div_0_Template_form_ngSubmit_8_listener","ctx_r8","submit","ɵɵtemplate","OrderModalComponent_div_0_div_46_Template","OrderModalComponent_div_0_Template_button_click_47_listener","ctx_r9","addItem","OrderModalComponent_div_0_Template_button_click_55_listener","ctx_r10","ctx_r0","orderForm","items","controls","tmp_2_0","invalid","constructor","fb","IsOpen","OnSave","group","id","orderNumber","customerName","customerEmail","orderDate","status","total","array","shippingAddress","notes","ngOnChanges","changes","populateForm","resetForm","push","productName","quantity","unitPrice","removeAt","updateTotal","reduce","sum","item","patchValue","order","console","log","clear","forEach","reset","Date","toISOString","split","valid","ɵɵdirectiveInject","FormBuilder","inputs","outputs","features","ɵɵNgOnChangesFeature","OrderModalComponent_Template","OrderModalComponent_div_0_Template","OrderTableComponent_tr_19_Template_button_click_17_listener","_r3","order_r1","$implicit","ctx_r2","OnEdit","OrderTableComponent_tr_19_Template_button_click_20_listener","OnDelete","ɵɵtextInterpolate","length","Orders","IsLoading","OrderTableComponent_Template","OrderTableComponent_tr_19_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error","orderService","CurrentOrder","IsModalOpen","ngOnInit","getOrders","then","orders","handleAddOrder","handleEditOrder","handleDeleteOrder","deleteOrder","filter","handleSaveOrder","updateOrder","updatedOrder","map","o","createOrder","OrderListComponent_Template","OrderListComponent_Template_button_click_4_listener","OrderListComponent_Template_order_table_OnEdit_6_listener","$event","OrderListComponent_Template_order_table_OnDelete_6_listener","OrderListComponent_Template_order_modal_OnClose_7_listener","OrderListComponent_Template_order_modal_OnSave_7_listener","httpClient","mockOrders","Promise","resolve","getOrderById","find","Error","newOrder","Math","random","toString","substring","findIndex","splice","uploadReceipt","orderId","file","name","ɵɵinject","HttpClient","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}